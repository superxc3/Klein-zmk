/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define FUN  3
#define SYM  4
#define MEDIA  5
#define BLU 6

/*
 * MACRO
 *
 * Example 1 Left Shift+X
 * &macro_press &kp LSHFT &macro_tap &kp X &macro_release &kp LSHFT
 * 
 * Example 2 c, 8
 * &macro_tap &kp C &kp N8
 * 
 */

/ {
    macros {
		spswrd: spswrd {
        compatible = "zmk,behavior-macro";
        label = "ZM_spswrd";
        #binding-cells = <0>;
        wait-ms = <10>;
        tap-ms = <10>;
        bindings = <&macro_press &kp LSHFT &macro_tap &kp X &macro_release &kp LSHFT &macro_tap &kp C &kp N8 &kp N9 &kp N1 &kp N1 &kp N0 &kp N3 &kp DOLLAR>;
        };

		gmail: gmail {
        compatible = "zmk,behavior-macro";
        label = "ZM_gmail";
        #binding-cells = <0>;
        wait-ms = <10>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp X &kp C &kp H &kp C &kp L &kp O &kp W &kp AT_SIGN &kp G &kp M &kp A &kp I &kp L &kp PERIOD &kp C &kp O &kp M>;
        };
		
		fulps: fulps {
        compatible = "zmk,behavior-macro";
        label = "ZM_fulps";
        #binding-cells = <0>;
        wait-ms = <10>;
        tap-ms = <10>;
        bindings = <&macro_press &kp LSHFT &macro_tap &kp I &macro_release &kp LSHFT &macro_tap &kp M &kp R &kp I &kp C &kp H &kp N8 &kp N9 &kp N1 &kp N1 &kp N0 &kp N3 &kp EXCLAMATION &kp EXCLAMATION &kp EXCLAMATION>;
        };		
		
		mybnk: mybnk {
        compatible = "zmk,behavior-macro";
        label = "ZM_mybnk";
        #binding-cells = <0>;
        wait-ms = <10>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp X &kp C &kp H &kp C &kp L &kp O &kp W &kp N3>;
        };
		
		cmbnk: cmbnk {
        compatible = "zmk,behavior-macro";
        label = "ZM_cmbnk";
        #binding-cells = <0>;
        wait-ms = <10>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp S &kp U &kp P &kp E &kp R &kp X &kp C &kp N3>;
        };		
		
    };
};

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <180>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
//          ------------------------------------------------------------------------------------------------------------
//          |     Q(1)   |  W  |  E   |  R   |  T   |                                           |  Y   |  U    |  I    |  O   |   P   |
//          |     A(2)   |  S  |  D   |  F(1)|  G   |                                           |  H   |  J(1) |  K    |  L   |   -   |
//          |  	  Z(2)   |  X  |  C   |  V(2)|  <-  |                                           |  B   |   N   |  M    |  ,    |  .   |
//          | ESC(Lalt)  | TAB (Lsft) |  SPC (Lctl) | BOOTLOADER |                              | MUTE | SPC (3) | Enter | CPS(Lgui) |

                        bindings = <
  &lt 1 Q 	    &kp W 	&kp E 	&kp R 		&kp T             	&kp Y 		&kp U    	&kp I     &kp O     &kp P     
  &lt 2 A 	    &kp S 	&kp D 	&lt 1 F 	&kp G             	&kp H 		&lt 1 J  	&kp K     &kp L     &kp MINUS  
  &lt 2 Z 	&lt 3 X &kp C 	&lt 2 V 	&kp BSPC          	&kp B 		&kp N    	&lt 5 M   &kp COMMA &kp DOT   
                  &mt LALT ESC  &mt LSHIFT TAB  &mt LCTRL SPACE &trans &trans			&lt 3 SPACE  &kp RET  &mt LGUI CAPS
                        >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        
  

        nav_layer {
        
//          ------------------------------------------------------------------------------------------------------------
//          |  ~  |  !  |  @   |  #   |  $   |                                           |  %   |  ^    |  &    |  *   |   -   |
//          |  `  |     |      |      |  (   |                                           |  )   |       |   ;   |  '   |   |   |
//          |  (  |     |      |      |      |                                           |      |       |   [   |  ]   |   /   |
//                      | ESC  | SPC |  ENT | BOOTLOADER |                        | MUTE | CHS  |       |       |

                        bindings = <
   &kp TILDE  &kp EXCLAMATION &kp AT      &kp HASH     &kp DLLR        		 &kp PRCNT  &kp CARET 	&kp AMPS  &kp ASTERISK  &kp MINUS
   &kp GRAVE  &trans          &trans      &trans    &kp LPAR        		 &kp RPAR  	&trans     &kp SEMI   	&kp SQT   &kp PIPE    
   &kp LPAR   &trans          &trans       &trans    &trans      		&trans  &trans     &kp LBKT   &kp RBKT &kp FSLH
   &trans     &trans  	      &kp KP_ENTER  &trans 			        &trans 		&kp LA(LSHIFT)    &trans &trans
                        >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        num_layer {
            
                        bindings = <
   &trans    &kp C_AL_CALCULATOR &kp LG(UP)    &trans	  &trans	        &kp N7   &kp N8    &kp N9    &kp KP_MULTIPLY    &kp KP_MINUS
   &trans    &kp LG(LEFT) 	&kp LG(DOWN)  &kp LG(RIGHT)  &trans          	&kp N4   &kp N5    &kp N6    &kp COMMA          &kp KP_PLUS
   &trans    &trans       	&trans        &trans         &kp BSPC      	&kp N1   &kp N2    &kp N3    &kp KP_DOT         &kp KP_DIVIDE
                                &kp ESC      &kp BSPC   &kp BSPC &trans   &trans   &kp  EQUAL        &kp N0      &kp KP_DOT
                        >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        fun_layer {
            
                        bindings = <
   &trans &trans  &trans  &kp UP     &trans    		  &kp HOME     &kp END   &trans    &bt BT_SEL 0  &bt BT_SEL 1
   &trans &trans  &kp LEFT   &kp DOWN   &kp RIGHT       &kp LS(F9)   &kp UP    &kp LS(F10)    &bt BT_SEL 2     &bt BT_SEL 3 
   &trans &trans  &trans  &trans  &trans 	       &kp LEFT     &kp DOWN  &kp RIGHT       &bt BT_SEL 4      &bt BT_CLR
					   &trans &trans &trans    &trans     &trans    &trans  &trans    &trans
                        >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        sym_layer {
            
            bindings = <
&kp LS(LBKT)   &kp LS(N7)     &kp LS(N8)     &kp LS(N9)     &kp LS(RBKT)        &trans         &trans         &trans         &trans         &trans
&kp LS(SEMI)   &kp LS(N4)     &kp LS(N5)     &kp LS(N6)     &kp LS(EQUAL)       &trans         &kp LSHFT      &kp LCTRL      &kp LALT       &kp LGUI
&kp LS(GRAVE)  &kp LS(N1)     &kp LS(N2)     &kp LS(N3)     &kp LS(BSLH)        &trans         &trans         &trans         &trans         &trans
&kp LS(PERIOD) &kp LS(N0)     &kp LS(MINUS)  &bootloader                                       &bootloader    &trans         &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        media_layer {
            
                        bindings = <
   &kp C_AL_CALCULATOR  &kp KP_MINUS   &kp N7    &kp N8    &kp 9        	 	 &mybnk   &trans    &trans    &trans      &trans    
   &trans  &kp KP_PLUS   &kp N4    &kp N5    &kp N6      				  &cmbnk   &spswrd    &trans    &kp C_VOL_UP   &kp C_VOL_DN    
   &trans       &kp KP_MULTIPLY   &kp N1    &kp N2    &kp N3      			 &gmail   &fulps    &trans   &kp C_PREVIOUS &kp C_NEXT       
                                &kp N0      &kp KP_DOT      &kp  EQUAL  &trans &trans  &trans &trans &trans
                        >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        blu_layer {
            
            bindings = <
&trans         &trans         &trans         &trans         &trans              &bt BT_CLR     &trans         &trans         &trans         &trans
&trans         &bt BT_SEL 3   &bt BT_SEL 4   &trans         &trans              &trans         &bt BT_PRV     &bt BT_NXT     &trans         &trans
&bt BT_CLR     &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &trans              &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4
&trans         &trans         &trans         &trans         &trans                             &trans         &trans         &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
 
